[{"title":"This week do an Hour of Code with your kids","summary":"The Hour of Code started in 2013 with the goal of getting kids excited about programming and computer science.","textbody":'<p>The Hour of Code started in 2013 with the goal of getting kids excited about programming and computer science.</p>\r\n\r\n<p>This week-long event encourages teachers and parents to spend an hour coding with their kids.</p>\r\n\r\n<p>It&rsquo;s become a huge movement all over the world, with famous participants like Malala and even President Obama.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>This year, the Hour of Code is from December 5&ndash;11.</p>\r\n\r\n<p>How much can a kid learn about programming in a single hour? Not a whole lot. But the goal is to help them have fun and discover a desire within themselves to learn more.</p>\r\n\r\n<p>To save you the trouble of piecing together your own kid-friendly curriculum, several organizations have designed special one-hour challenges. You and your kids can tackle one or more of these.</p>\r\n\r\n<h3>Free Code Camp&rsquo;s Front End Hour of Code Challenge</h3>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*NRvQ5wp36Oz4lb9R-fq0Kw.png" /><img src="https://cdn-images-1.medium.com/max/1200/1*NRvQ5wp36Oz4lb9R-fq0Kw.png" /></p>\r\n\r\n<p>Our open source community is focused on helping adults learn to code so they can get developer jobs. But we also want to help kids get interested in coding at an early age. So we&rsquo;ve also created a one-hour coding challenge.</p>\r\n\r\n<p>Kids don&rsquo;t need to create an account or do anything to prepare. They can just go to our&nbsp;<a href="http://freecodecamp.com/hour-of-code" target="_blank">Hour of Code</a>&nbsp;page and get started.</p>\r\n\r\n<p>These special coding challenges focus on front-end development with JavaScript. They&rsquo;re&nbsp;<a href="https://github.com/FreeCodeCamp/hour-of-code" target="_blank">fully open source</a>.</p>\r\n\r\n<p>Last week, two campers who had recently finished the first 1,200 hours of Free Code Camp&rsquo;s curriculum met to design and code these challenges:</p>\r\n\r\n<ul>\r\n\t<li>Cindy Hsu is a first-year computer science student at the University of British Columbia. Aside from coding a lot, she enjoys video games and often&nbsp;<a href="https://www.twitch.tv/princekun" target="_blank">live-streams on Twitch</a>.</li>\r\n\t<li>Danny Libin is a pharmacist who has long been interested in technology, and recently&nbsp;<a href="https://github.com/Daynil" target="_blank">got more serious about programming</a>.</li>\r\n</ul>\r\n\r\n<p>Here&rsquo;s&nbsp;<a href="http://www.freecodecamp.com/hour-of-code" target="_blank">a link to this challenge</a>&nbsp;to get started.</p>\r\n\r\n<h3>Khan Academy&rsquo;s Hour of Drawing with&nbsp;Code</h3>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*k3eqex_Gr9enNK23PmsdAw.png" /></p>\r\n\r\n<p>You can use JavaScript to do all kinds of graphics in your browser.</p>\r\n\r\n<p>This Hour of Code challenge will walk your kids through using shapes to build a snowman.</p>\r\n\r\n<p>Here&rsquo;s&nbsp;<a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-drawing-code/v/welcome-hour-of-code" target="_blank">a link to this challenge</a>&nbsp;to get started.</p>\r\n\r\n<h3>Khan Academy&rsquo;s Hour of&nbsp;SQL</h3>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/1*_JWuFaOQtR5f4NHHvYYfHQ.png" /></p>\r\n\r\n<p>This more advanced challenge gives kids a chance to learn how relational databases work.</p>\r\n\r\n<p>It offers several conceptual videos, along with instructions for creating simple SQL queries.</p>\r\n\r\n<p>Here&rsquo;s&nbsp;<a href="https://www.khanacademy.org/computing/hour-of-code/hour-of-sql/v/welcome-to-sql" target="_blank">a link to this challenge</a>&nbsp;to get started.</p>\r\n\r\n<h3>The Minecraft Puzzle Hour of Code Challenge</h3>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*VbyFMFKpn4JMdUPnWqXluA.png" /></p>\r\n\r\n<p>This is a fun coding challenge that use the Scratch programming language &mdash; a language designed specifically for kids to learn basic programming concepts.</p>\r\n\r\n<p>Here&rsquo;s&nbsp;<a href="https://studio.code.org/s/minecraft/stage/1/puzzle/1" target="_blank">a link to this challenge</a>&nbsp;to get started.</p>\r\n\r\n<p>Remember: the Hour of Code is from December 5&ndash;11, but you can sit down and code with your kids any time you want. 😃</p>\r\n\r\n<p>Happy coding!</p>\r\n\r\n<hr />\r\n<p>Thanks for taking time out of your busy day to read my article. If you liked it, click the 💚 below so other people will see this here on Medium.</p>\r\n',"image":"https://cdn-images-1.medium.com/max/2000/1*pNZ31J4Yf-U1zuQg_R0MXA.jpeg","author":"Quincy Larson","posted_on":"1480917541511","slug":"this-week-do-an-hour-of-code-with-your-kids"},{"title":"What is React.js and Why I recommend it to other JavaScript Developers?","summary":"This is a great choice to start with because it will expose you to concepts that will likely be prevalent","textbody":'<h2><strong>React.js</strong></h2>\r\n\r\n<p>This is a great choice to start with because it will expose you to concepts that will likely be prevalent in the web moving forward.&nbsp; Although the source code is just as unreadable as Angular&#39;s, the core API is amazingly simple - just a handful of lifecycle methods.&nbsp;<br />\r\n<br />\r\nThe trade off is that React is, famously, only the V (view) in MVC.&nbsp; If you&#39;re looking to work with remote data, you&#39;re going to have to quickly look into additional frameworks like Flux to support your app.&nbsp; Navigating all of these additional technologies can be challenging for a beginner, especially since many of them are rapidly coming into and falling out of style.<br />\r\n&nbsp;</p>\r\n\r\n<p>React.js is a JavaScript library for building user interfaces,&nbsp;built by top engineers at Facebook. This 8-week program will revolutionize the way you&nbsp;develop user interfaces for your own applications, or for your clients. Read on to learn more about this exciting new workshop, and why you should learn React.js as&nbsp;the next skill&nbsp;on your developer resume.</p>\r\n\r\n<p>Facebook&rsquo;s dev team built React to solve one problem: building large applications with data that changes over time.&nbsp;React lets you express how your app should look at any given point, and can automatically manage all UI updates when your underlying data changes. React.js is declarative, which means that&nbsp;React conceptually hits the &ldquo;refresh&rdquo; button any time data changes, and knows to only update the changed parts. React was used in-house at Facebook before being released as an open-source project to the public, so you can be certain it knows how to handle an astronomical amount of data.</p>\r\n\r\n<p>React is a JavaScript library, but is often mistakenly referred to as a framework. Like many popular frameworks (Bootstrap, for example),&nbsp;React is all about reusable components. However, unlike frameworks, which&nbsp;are built with the goal of getting whole apps up and running quickly,&nbsp;the only thing you do with React is build components.&nbsp;As React.js&rsquo;s core functionality, components make reusing code, testing, and separating concerns easy.</p>\r\n\r\n<p>React was created by Facebook in 2013, and then released as an open-source project. This means that Facebook&rsquo;s developers solved React&rsquo;s major problems first, and then made the code available to the world. React.js is, for most developers, clean and easy to use right from the start.</p>\r\n\r\n<p>React.js is the 5th most starred JavaScript library on Github, falling just behind Angular, D3, jQuery, and HTML5. It&rsquo;s popularity is strong with plenty of room to grow. What does that mean to a junior developer? Learn React for lots of job opportunities!</p>\r\n\r\n<p>One reason developers love React.js is because the library makes it easy to get started. You can drop in a single widget, or code your entire app. You can use React.js seamlessly with Node.js or AngularJS. This is a marked difference to using the Angular framework, which provides a much more rigid structure for your project (you can use<a href="https://github.com/ngReact/ngReact" target="_blank">ngReact</a>&nbsp;to integrate react.js with existing angular.js project).</p>\r\n\r\n<p>It may be a coincidence that React.js was made by the world&rsquo;s largest social network, but this library plays exceptionally well with&nbsp; Node , Rails, AngularJS&hellip; anything. There&rsquo;s even a Ruby gem for React! The only caveat is that you shouldn&rsquo;t try mixing React with jQuery. React.js is meant to replace jQuery, so there&rsquo;s no need to use both. Developers can squeeze in jQuery if they try, but the original dev team advises against using both.</p>\r\n\r\n<p>The ability to mix and match means you don&rsquo;t have to train your brain to &ldquo;think in React.js&rdquo; all the time. Angular, for example, requires developers to think in sync with the Angular framework. For experienced&nbsp;Angular developers, this will become second nature. Think of one as learning a new language, and as picking up a few words.</p>\r\n\r\n<p>React.js makes building UI simpler than ever.&nbsp; You can pin chat messages or load photos in a view with the same piece of code.&nbsp;Universal rendering also means your apps will be fast beyond what you&rsquo;re used to.&nbsp;React.js gives you server side goodies, like better SEO,&nbsp;and even&nbsp;lets you use the same code on the server and client side. Your apps will be faster and more responsive with less work from you.React.js is a true full stacker, and works with Android, desktop, iOS, or mobile. In a nutshell, React.js was made by developers, for developers, solving many of the compatibility issues and redundancies they discovered when trying to make their own user interfaces responsive to data.</p>\r\n\r\n<p>The React.js dev team believes that happy developers mean happy users. Redux devtools let you preview changes without refreshing, and you can bounce between versions to check your work. Below I am going to discuss more of React.js programming guidelines , architecture and more.</p>\r\n\r\n<h3><strong>Concepts of React.js</strong></h3>\r\n\r\n<p>React has quite a small API. This makes it fun to use, easy to learn, and simple to understand. However, being simple does not mean it&#39;s familiar. There are a few concepts to cover before getting started. Let&#39;s look at each in turn.</p>\r\n\r\n<p><strong>React elements</strong>&nbsp;are JavaScript objects which represent HTML elements. They do not exist in the browser. They represent browser elements .</p>\r\n\r\n<p><strong>Components</strong>&nbsp;are developer created React elements. They&#39;re usually larger parts of the user interface which contain both the structure and functionality .</p>\r\n\r\n<h3><strong>JSX</strong></h3>\r\n\r\n<p>It&rsquo;s called JSX, and it is a Javascript XML syntax transform. This lets you write HTML-<em>ish</em>&nbsp;tags in your Javascript. I say HTML-<em>ish</em>&nbsp;because there are a couple gotchas. You are really just writing XML based object representations.</p>\r\n\r\n<p>For regular html tags, the attribute is and the attribute is in JSX because these are reserved words in Javascript. More differences can be&nbsp;<a href="http://facebook.github.io/react/docs/jsx-gotchas.html" target="_blank">reviewed here</a>.</p>\r\n\r\n<p>It&#39;s is a technique for creating React elements and components. For example is a React element written in JSX. The same React element can be written as JavaScript with . JSX is less effort to read and write and is transformed into JavaScript before running in the browser.</p>\r\n\r\n<p><strong>Useful links about JSX:</strong>&nbsp;<br />\r\n-&nbsp;<a href="https://facebook.github.io/react/docs/jsx-in-depth.html" target="_blank">JSX in depth</a>&nbsp;<br />\r\n-&nbsp;<a href="https://facebook.github.io/react/jsx-compiler.html" target="_blank">Online JSX compiler</a></p>\r\n\r\n<h2><strong>The Virtual DOM</strong></h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>The Virtual DOM</strong>&nbsp;is a JavaScript tree of React elements and components. React renders the virtual DOM to the browser to make the user interface visible. React observes the virtual DOM for changes and automatically mutates browser DOM to match the virtual DOM.</p>\r\n\r\n<h3><strong>How does the Virtual DOM work?</strong></h3>\r\n\r\n<p>Imagine you had an object that you modeled around a person. It had every relevant property a person could possibly have, and mirrored the persons current state. This is basically what React does with the DOM.</p>\r\n\r\n<p>Now think about if you took that object and made some changes. Added a mustache, some sweet biceps and Steve Buscemi eyes. In React-land, when we apply these changes, two things take place. First, React runs a &ldquo;diffing&rdquo; algorithm, which identifies what has changed. The second step is reconciliation, where it updates the DOM with the results of diff.</p>\r\n\r\n<p>The way React works, rather than taking the real person and rebuilding them from the ground up, it would only change the face and the arms. This means that if you had text in an input and a render took place, as long as the input&rsquo;s parent node wasn&rsquo;t scheduled for reconciliation, the text would stay undisturbed.</p>\r\n\r\n<p>Because React is using a fake DOM and not a real one, it also opens up a fun new possibility. We can render that fake DOM on the server, and boom, server side React views.</p>\r\n\r\n<p><strong>Useful links, other virtual DOM libraries</strong></p>\r\n\r\n<ul>\r\n\t<li><a href="http://calendar.perfplanet.com/2013/diff/" target="_blank">React&rsquo;s diff algorithm</a></li>\r\n\t<li><a href="http://fluentconf.com/fluent2014/public/schedule/detail/32395" target="_blank">The Secrets of React&#39;s virtual DOM</a></li>\r\n\t<li><a href="http://stackoverflow.com/questions/21109361/why-is-reacts-concept-of-virtual-dom-said-to-be-more-performant-than-dirty-mode" target="_blank">Why is React&#39;s concept of virtual DOM said to be more performant than dirty model checking?</a></li>\r\n\t<li><a href="https://github.com/Matt-Esch/virtual-dom" target="_blank">virtual-dom</a></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>With a small understanding of these concepts we can move on to using React. We&#39;ll build a series of user interfaces, each adding a layer of functionality on the previous. We&#39;ll build a photo stream similar to instagram - example applications don&#39;t get much better than this!</p>\r\n\r\n<h2><strong>Rendering</strong></h2>\r\n\r\n<p>The first order of business is rendering a virtual element (a React element or component). Remember, since a virtual element exists only in JavaScript memory, we must explicitly tell React to render it to the browser DOM</p>\r\n\r\n<p>React.render(&lt;imgsrc=&#39;http://tinyurl.com/lkevsb9&#39;/&gt;,document.body);<br />\r\n<br />\r\n<br />\r\nThe render function accepts two arguments; a virtual element and a real DOM node.<br />\r\nReact takes the virtual element and inserts it into the given DOM node.&nbsp;<br />\r\nThe image is now visible in the browser.</p>\r\n\r\n<h2><strong>Components</strong></h2>\r\n\r\n<p>Components are the heart and soul of React. They are custom React elements. They are usually extended with unique functionality and structure.</p>\r\n\r\n<p>When using the method above, our first argument is the component we want to render, and the second is the DOM node it should mount to. We can use the method to create custom component classes. It takes an object of specifications as it&rsquo;s argument. Lets create one below:</p>\r\n\r\n<p>varPhoto=React.createClass({render:function(){return&lt;imgsrc=&#39;http://tinyurl.com/lkevsb9&#39;/&gt;}});React.render(&lt;Photo/&gt;,document.body);<br />\r\n<br />\r\n<br />\r\n<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<h2><strong>Props</strong></h2>\r\n\r\n<p>Props can be thought of as a component&#39;s options. They&#39;re given as arguments to a component and look exactly like HTML attributes.</p>\r\n\r\n<p>When we use our defined components, we can add attributes called props. These attributes are available in our component as and can be used in our render method to render dynamic data:</p>\r\n\r\n<p>var Photo = React.createClass({<br />\r\n<br />\r\n&nbsp; render: function() {<br />\r\n&nbsp;&nbsp;&nbsp; return (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;photo&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;img src={this.props.src} /&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;span&gt;{this.props.caption}&lt;/span&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp; );<br />\r\n&nbsp; }<br />\r\n});</p>\r\n\r\n<p>Inside the React render function, two props are passed to the Photo component; src and caption.<br />\r\n<br />\r\nInside the component&#39;s render function the src prop is used as the src for the React image element. The caption prop is also used as plain text within the React span element.<br />\r\n<br />\r\nIt&#39;s worth noting that a component should never change its props, they&#39;re immutable. If a component has data that&#39;s mutable, use the state object.</p>\r\n\r\n<h2><strong>Specs, Lifecycle &amp; State</strong></h2>\r\n\r\n<p>The method is the only required spec for creating a component, but there are several lifecycle methods &amp; specs we can use that are mighty helpful when you actually want your component to do anything.</p>\r\n\r\n<h3><strong>Lifecycle Methods</strong></h3>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<ul>\r\n\t<li><strong>componentWillMount</strong>&nbsp;&ndash; Invoked once, on both client &amp; server before rendering occurs.</li>\r\n\t<li><strong>componentDidMount</strong>&nbsp;&ndash; Invoked once, only on the client, after rendering occurs.</li>\r\n\t<li><strong>shouldComponentUpdate</strong>&nbsp;&ndash; Return value determines whether component should update.</li>\r\n\t<li><strong>componentWillUnmount</strong>&nbsp;&ndash; Invoked prior to unmounting component.</li>\r\n</ul>\r\n\r\n<h3><strong>Specs</strong></h3>\r\n\r\n<ul>\r\n\t<li><strong>getInitialState</strong>&nbsp;&ndash; Return value is the initial value for state.</li>\r\n\t<li><strong>getDefaultProps</strong>&nbsp;&ndash; Sets fallback props values if props aren&rsquo;t supplied.</li>\r\n\t<li><strong>mixins</strong>&nbsp;&ndash; An array of objects, used to extend the current component&rsquo;s functionality.</li>\r\n</ul>\r\n\r\n<p>There are several more specs &amp; lifecycle methods that you can read about&nbsp;<a href="http://facebook.github.io/react/docs/component-specs.html" target="_blank">here</a>.</p>\r\n\r\n<h2><strong>State</strong></h2>\r\n\r\n<p>The state object is internal to a component. It holds data which can change over time.</p>\r\n\r\n<p>Every component has a object and a object. State is set using the method. Calling triggers UI updates and is the bread and butter of React&rsquo;s interactivity. If we want to set an initial state before any interaction occurs we can use the method. Below, see how we can set our component&rsquo;s state:</p>\r\n\r\n<p>var Photo = React.createClass({<br />\r\n<br />\r\n&nbsp; toggleLiked: function() {<br />\r\n&nbsp;&nbsp;&nbsp; this.setState({<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; liked: !this.state.liked<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp; },<br />\r\n<br />\r\n&nbsp; getInitialState: function() {<br />\r\n&nbsp;&nbsp;&nbsp; return {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; liked: false<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp; },<br />\r\n<br />\r\n&nbsp; render: function() {<br />\r\n&nbsp;&nbsp;&nbsp; var buttonClass = this.state.liked ? &#39;active&#39; : &#39;&#39;;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; return (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;photo&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;img src={this.props.src} /&gt;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;bar&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;button onClick={this.toggleLiked} className={buttonClass}&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &hearts;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;span&gt;{this.props.caption}&lt;/span&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp; );<br />\r\n&nbsp; }<br />\r\n});<br />\r\n<br />\r\nReact.render(&lt;Photo src=&#39;http://tinyurl.com/lkevsb9&#39; caption=&#39;Hong Kong!&#39;/&gt;, document.body);</p>\r\n\r\n<p>Having state in a component introduces a bit more complexity.</p>\r\n\r\n<p>The component has a new function . React calls this function when the component is initialised. The returned object is set as the component&#39;s initial state (as the function name implies).</p>\r\n\r\n<p>The component has another new function . This function calls on the component which toggles the value.</p>\r\n\r\n<p>Within the component&#39;s render function a variable is assigned either &#39;active&#39; or nothing - depending on the state.</p>\r\n\r\n<p>is used as a class name on the React button element. The button also has an event handler set to the function.</p>\r\n\r\n<p>Here&#39;s what happens when the component is rendered to the browser DOM:</p>\r\n\r\n<ul>\r\n\t<li>When the component&#39;s button is clicked, is called</li>\r\n\t<li>The state is changed</li>\r\n\t<li>React re-renders the component to the virtual DOM</li>\r\n\t<li>The new virtual DOM is compared with the previous virtual DOM</li>\r\n\t<li>React isolates what has changed and updates the browser DOM</li>\r\n</ul>\r\n\r\n<p>In this case, React will change the class name on the button.</p>\r\n\r\n<h2><strong>Events</strong></h2>\r\n\r\n<p>React also has a built in cross browser events system. The events are attached as properties of components and can trigger methods. Lets make our count increment below using events:</p>\r\n\r\n<p>/** @jsx React.DOM */<br />\r\n<br />\r\nvar Counter = React.createClass({<br />\r\n&nbsp; incrementCount: function(){<br />\r\n&nbsp;&nbsp;&nbsp; this.setState({<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count: this.state.count + 1<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp; },<br />\r\n&nbsp; getInitialState: function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; return {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count: 0<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp; },<br />\r\n&nbsp; render: function(){<br />\r\n&nbsp;&nbsp;&nbsp; return (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=&quot;my-component&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;h1&gt;Count: {this.state.count}&lt;/h1&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;button type=&quot;button&quot; onClick={this.incrementCount}&gt;Increment&lt;/button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp; );<br />\r\n&nbsp; }<br />\r\n});<br />\r\n<br />\r\nReact.render(&lt;Counter/&gt;, document.getElementById(&#39;mount-point&#39;));</p>\r\n\r\n<h2><strong>Composition</strong></h2>\r\n\r\n<p>Composition means combining smaller components to form a larger whole. For example the component could be used inside a component, like so:</p>\r\n\r\n<p>var Photo = React.createClass({<br />\r\n<br />\r\n&nbsp; toggleLiked: function() {<br />\r\n&nbsp;&nbsp;&nbsp; this.setState({<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; liked: !this.state.liked<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp; },<br />\r\n<br />\r\n&nbsp; getInitialState: function() {<br />\r\n&nbsp;&nbsp;&nbsp; return {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; liked: false<br />\r\n&nbsp;&nbsp;&nbsp; };<br />\r\n&nbsp; },<br />\r\n<br />\r\n&nbsp; render: function() {<br />\r\n&nbsp;&nbsp;&nbsp; var buttonClass = this.state.liked ? &#39;active&#39; : &#39;&#39;;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; return (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;photo&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;img src={this.props.src} /&gt;<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;bar&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;button onClick={this.toggleLiked} className={buttonClass}&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &hearts;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;span&gt;{this.props.caption}&lt;/span&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp; );<br />\r\n&nbsp; }<br />\r\n});<br />\r\n<br />\r\nvar PhotoGallery = React.createClass({<br />\r\n<br />\r\n&nbsp; render: function() {<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; var photos = this.props.photos.map(function(photo) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &lt;Photo src={photo.url} caption={photo.caption} /&gt;<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n<br />\r\n&nbsp;&nbsp;&nbsp; return (<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div className=&#39;photo-gallery&#39;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {photos}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&nbsp;&nbsp;&nbsp; );<br />\r\n&nbsp; }<br />\r\n});<br />\r\n<br />\r\nvar data = [<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; url: &#39;http://tinyurl.com/lkevsb9&#39;,<br />\r\n&nbsp;&nbsp;&nbsp; caption: &#39;Hong Kong!&#39;<br />\r\n&nbsp; },<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; url: &#39;http://tinyurl.com/mxkwh56&#39;,<br />\r\n&nbsp;&nbsp;&nbsp; caption: &#39;Cows&#39;<br />\r\n&nbsp; },<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; url: &#39;http://tinyurl.com/nc7jv28&#39;,<br />\r\n&nbsp;&nbsp;&nbsp; caption: &#39;Scooters&#39;<br />\r\n&nbsp; }<br />\r\n];<br />\r\n<br />\r\nReact.render(&lt;PhotoGallery photos={data} /&gt;, document.body);</p>\r\n\r\n<p>The component is exactly the same as before.</p>\r\n\r\n<p>There&#39;s a new component which generates 3 components from some fake data passed in as a .</p>\r\n\r\n<p><strong>React.js Cheat Sheet</strong>&nbsp;(for them who are too busy like me :) )</p>\r\n\r\n<p>http://ricostacruz.com/cheatsheets/react.html</p>\r\n\r\n<p>This should be enough to get started building user interfaces with React. The&nbsp;<a href="http://facebook.github.io/react/docs/getting-started.html" target="_blank">React docs</a>cover everything in detail and must take some time to check out the&nbsp;<a href="http://facebook.github.io/react/docs/top-level-api.html" target="_blank">React API</a>&nbsp;and read up a bit on&nbsp;<a href="http://facebook.github.io/react/docs/jsx-in-depth.html" target="_blank">JSX</a>. I highly recommend reading it. Also if you are planning to build a mobile app ,you may consider&nbsp;<a href="http://facebook.github.io/react-native/" target="_blank">react native.</a></p>\r\n\r\n<p>React is fast and scalable, I have went through how React handles the rendering and what the component-driven development is. These are the very basics. I will be writing&nbsp;next about flux&nbsp; and how to integrate react.js with node.js (express.js , MEAN.IO, Sails.js and Meteor.js) .</p>\r\n\r\n<p>Thanks for reading!</p>\r\n\r\n<p>Love the post? Hate the post? Have other Tips? Please Leave a comment below!</p>\r\n\r\n<h3><strong>About the Author</strong></h3>\r\n\r\n<p><strong><img src="https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAQhAAAAJDljYTAxMjgwLTY2NjQtNGI0NS04ZjhhLWMzNDExZDMzMDUyZQ.jpg" style="height:130px; width:130px" /></strong><em>Sandip Das is a tech start-up adviser as well as&nbsp; working for multiple&nbsp; international&nbsp;&nbsp; IT firms , tech-entrepreneurs as Individual IT consultant / Sr. Web Application developer / JavaScript Architect , worked as a team member,&nbsp; helped in development and in making IT decision . His desire is to help both the&nbsp;tech-entrepreneurs &amp; team to help build awesome web based products , make team more knowledgeable , add new Ideas to give WOW expression in product.</em></p>\r\n',"image":"https://media.licdn.com/mpr/mpr/AAEAAQAAAAAAAAU-AAAAJGY4ZTUzNzUxLTMxN2UtNGIwNS1iMWZiLTk5MjEwMWQ2Y2I4Ng.png","author":"Sandip Das","posted_on":"1480789808898","slug":"what-is-react-js-and-why-i-recommend-it-to-other-javascript-developers"},{"title":"Lessons From My Post-bootcamp Job Search in London","summary":"Coding bootcamps are hard. And finding the job after one is often even harder.","textbody":'<p>Coding bootcamps are hard. And finding the job after one is often even harder.</p>\r\n\r\n<p>After I finished a coding bootcamp, I spent a total of 3 months looking for a position. I eventually found one here in London.</p>\r\n\r\n<p>I blogged about the entire experience. But after reading Felix Feng&rsquo;s<a href="https://medium.freecodecamp.com/5-key-learnings-from-the-post-bootcamp-job-search-9a07468d2331#.xo8qlsw5f" target="_blank">overview of his post-bootcamp job search</a>, I decided to write this single article summarizing the main things I learned from this process.</p>\r\n\r\n<p>First of all &mdash; I did <em>online</em> bootcamp &mdash; Boston-based <a href="https://www.thefirehoseproject.com/" target="_blank">The Firehose Project</a> &mdash; while I was in London. This meant I missed out on two big things in-person bootcamps often offer to make the job hunt easier:</p>\r\n\r\n<ol>\r\n\t<li>&ldquo;graduation day&rdquo; where employers are coming to the campus and pick the graduates for Junior positions.</li>\r\n\t<li>A dedicated careers department that helps place students in their first roles.</li>\r\n</ol>\r\n\r\n<p>I did receive training and support from my mentor, who was also based in London, and from the founders of The Firehose Project. But as you can imagine, things that work in US might not work in UK.</p>\r\n\r\n<h3>A Little Boost To Get You Going</h3>\r\n\r\n<p>Sometimes it is hard to start anything. A project, a book, a job search. There&rsquo;s a great book that can help you fight any resistance you may feel to getting started.</p>\r\n\r\n<p>This little book <a href="https://www.amazon.com/War-Art-Through-Creative-Battles/dp/1936891026/ref=tmm_pap_swatch_0?_encoding=UTF8&amp;qid=&amp;sr=" target="_blank">The War of Art by Steven Pressfield</a> will put you in a right mindset from the get-go. It is short and can be read in one day easily. I read it while I was still in the bootcamp, but the effect kept on for much longer.</p>\r\n\r\n<p>So if you are looking for a little push before you start looking for a job &mdash; give this book a go.</p>\r\n\r\n<h3>The Six Biggest Take-aways From my 3-month Job Hunt Rollercoaster</h3>\r\n\r\n<h3>Lesson #1: Don&rsquo;t Waste Your Time on Job Boards</h3>\r\n\r\n<p>Don&rsquo;t spend your time applying on the most popular job boards. There are recruiters behind and I have received only 2&ndash;3 calls from 100+ of my applications via the job board, which led to nowhere.</p>\r\n\r\n<p>At some point, I tried to attach a cover letter to these applications. It made absolutely no difference, so I stopped doing that, too.</p>\r\n\r\n<p>Instead, it was better to look for job postings that come directly from employers, such as the careers sections of companies&rsquo; websites, or job boards where recruiters are less likely to appear, such as <a href="https://unicornhunt.io/" target="_blank">Unicorn Hunt</a> and <a href="http://www.escapethecity.org/" target="_blank">Escape the City</a>.</p>\r\n\r\n<h3>Lesson #2: Minimize the Time You Spend Talking to Recruiters</h3>\r\n\r\n<p>At first, I thought I had to sell myself to the recruiters. So when they asked me about my situation, I told them my whole story: how I moved from SEO to programming, finished a bootcamp, worked on a group project, etc. This was a mistake.</p>\r\n\r\n<p>Most of the recruiters that call you won&rsquo;t be know Java from JavaScript. They&rsquo;ll have no idea what Model-View-Controller is, no idea about Ruby gems, REST, or Continuous Integration. They&rsquo;ll just have the names and acronyms on a screen in front of them, and need someone who has experience with these.</p>\r\n\r\n<p>All they want to know is whether you fit their criteria. And some housekeeping questions.</p>\r\n\r\n<p>After a while, I started to respond to them totally differently which saved a lot of my time in return. I made a little script of what I say on the first call after a usual question &ldquo;what&rsquo;s your current situation?&rdquo;:</p>\r\n\r\n<blockquote>&ldquo;Yes, I am in the market. I am looking for permanent, full-time <strong>[Front-end, Back-end, Full Stack]</strong> Junior Dev position ideally in the Central<strong>CITY_NAME</strong>.</blockquote>\r\n\r\n<blockquote>I am based in <strong>PLACE_NAME</strong> and I don&rsquo;t want to travel more than X hours one way. I have experience in <strong>LIST_YOUR_TECH_STACK</strong>. I am available immediately for both the interview and work.&rdquo;</blockquote>\r\n\r\n<p>It would only take me 20 seconds to say that. Then they would know exactly where I am and what I want. If the role they have fits, we carry on talking. If not, we wrap up the call and I haven&rsquo;t wasted my time.</p>\r\n\r\n<p>Other things to keep in mind when talking to recruiters:</p>\r\n\r\n<ol>\r\n\t<li>Don&rsquo;t share the names of the companies that you&rsquo;re currently interviewing with or have the offers from. It is just lead generation, so don&rsquo;t create unnecessary competition for yourself. Normally saying &ldquo;I would prefer not to disclose that at this moment&rdquo; works fine. If they insist saying &ldquo;Oh, I don&rsquo;t want to send you CV somewhere, where you have applied before&rdquo; ask them for the names of the companies they think of sending your CV. Then tell them whether you have already applied there.</li>\r\n\t<li>Record all the details in a spreadsheet of the recruiters that have interesting offers. I&rsquo;ve wasted lots of calls where it all seemed great, and then they would just disappear. I have no clue why some of them waste their time (and mine) talking through a cool offer, promise to &ldquo;send an email,&rdquo; and then just vanish. To avoid that, I ask &ldquo;Could you remind me your name and the agency you are calling from?&rdquo; before the end of the call, and start typing&hellip; they normally say &ldquo;I will send you an email right away&rdquo; and this time they actually do (sometimes even before hanging up).</li>\r\n\t<li>If the company they recruit for is looking for mid-level developers and the recruiter says &ldquo;the company will consider Juniors for the role with the passion and eagerness to learn. Write a nice cover letter and I will submit your CV, too&rdquo; &mdash; don&rsquo;t. I wrote at least 5 letters spending a good deal of time researching the companies and their background. None went through. Guess why? Because the company is looking for <strong>mid-level</strong>developers.</li>\r\n\t<li>As someone who&rsquo;s looking for a Junior position, you are a small fish to recruiters. So be prepared to be treated as such. They won&rsquo;t run after you as they do after the mid- and senior-level people. They often won&rsquo;t follow-up, or will just totally discard you.</li>\r\n</ol>\r\n\r\n<p>By no means is the above relevant to ALL recruiters. I did have a few good experiences with recruiters who were very professional, organized and considerate. But, as I said, there were just a <em>few</em>.</p>\r\n\r\n<h3>Lesson #3: Go to Startup Job Fairs, Tech Events, and Meetups</h3>\r\n\r\n<p>There was a time when I would go for a week or two between landing interviews. It was hard and discouraging.</p>\r\n\r\n<p>Then I went to the <a href="http://startupjobfair.org/" target="_blank">Startup Job Fair</a>. Two days later, I had six interviews lined up for the following 1.5 weeks. I realized immediately how powerful it was to meet someone in person, build rapport, and get a chance to interview at their company.</p>\r\n\r\n<p>As a bootcamp graduate or as a self-taught programmer, your main weapons are your <strong>fascination</strong> with programming and your <strong>thirst</strong> to learn more. In-person encounters are a perfect place to show these.</p>\r\n\r\n<p>I suggest going to meetups regularly. I normally went to one relevant meetup a week, and every big or small tech job fair I could find.</p>\r\n\r\n<p>Startup Job Fair proved to be the best, and I accepted a position with a company that I initially encountered there.</p>\r\n\r\n<p>On top of everything else, I got introduced to several great people, who also helped me to push my CV through some more doors, and gave me good career and life advice.</p>\r\n\r\n<p>One person I met while eating lunch there was also looking for a job. She got one after a week or two, then messaged me with a developer opening at her new company.</p>\r\n\r\n<p>This won&rsquo;t be true for all events, of course. Some events I went were pretty useless. For example, I went to a tech job fair for startups with 10 companies, 5 of which were not even looking for developers.</p>\r\n\r\n<p>But I still suggest going to as many events you can. It will pay off in offers, connections, and other unexpected bonuses.</p>\r\n\r\n<blockquote><em>&ldquo;You miss 100% of shots you don&rsquo;t take.&rdquo;<br />\r\n &mdash; Wayne Gretzky</em></blockquote>\r\n\r\n<h3>Lesson #4: Diversify Your Tech Skill Set</h3>\r\n\r\n<p>Here are two options, depending on the market you&rsquo;re in, and the type of bootcamp you&rsquo;ve attended.</p>\r\n\r\n<p>First, if your bootcamp is full-stack JavaScript and you are only looking for JavaScript jobs, and there are plenty in your city &mdash; keep writing JavaScript and studying it more.</p>\r\n\r\n<p>In my case, however, my bootcamp focused on Ruby on Rails, with some JavaScript. Naturally, I&rsquo;d been mostly considering Ruby on Rails jobs. As it turned out, there are very few Junior roles and lots of mid and senior available in London. Hence, I chose to diversify, and it worked.</p>\r\n\r\n<p>I went through courses, tutorials, endless blog posts, and built a couple of simple projects. This helped me learn enough Node.js, Express.js, Python, Django, and React to able to qualify for Junior positions with these technologies.</p>\r\n\r\n<p>If the bootcamp you have finished gave you good fundamentals, new tech will be relatively easy and quickly to pick up.</p>\r\n\r\n<p>After I updated my CV and included more technologies, more people started to call. I started to get more responses.</p>\r\n\r\n<p>The aim here was not to become the jack-of-all-trades, but to first become employable, and then study deeper the technology that I would be using at work.</p>\r\n\r\n<p>In my new position, I&rsquo;ll be working with Java mainly, so all my focus right now is on that.</p>\r\n\r\n<h3>Lesson #5: Structure Your Job Search like a Second Bootcamp</h3>\r\n\r\n<p>Structure. This is very important in a curriculum of a bootcamp. It&rsquo;s equally important to create a structure and strategy for yourself when searching for a job.</p>\r\n\r\n<p>Make a plan of attack and only then start implementing it. Schedule your days to include both job search and study.</p>\r\n\r\n<p>Don&rsquo;t mix things and multitask. We should all know that <a href="http://www.forbes.com/sites/nickmorrison/2014/11/26/the-myth-of-multitasking-and-what-it-means-for-learning/3/#1b987fbf2679" target="_blank">multitasking is a myth</a> by now.</p>\r\n\r\n<p><strong>Focus</strong> is the key. Do one thing at a time and don&rsquo;t forget to take breaks.</p>\r\n\r\n<p>If you&rsquo;re close to finishing the bootcamp , here&rsquo;s how I would approach the job search:</p>\r\n\r\n<p>Research and Study</p>\r\n\r\n<ol>\r\n\t<li>Look at the job boards and see if there is enough demand for the tech that you know.</li>\r\n\t<li>Make a list of tech that you lack and need to study or brush up on, based on the job specs. <a href="https://github.com/sindresorhus/awesome" target="_blank">Here is the &lsquo;Awesome list of Awesome Lists&rsquo; on Github</a>to get you started.</li>\r\n\t<li>Research, make a list of blog posts, Youtube tutorials, online courses on each subject from point 2.</li>\r\n\t<li>Prioritize the topics from point 2 and start studying. Every day at least a bit.</li>\r\n</ol>\r\n\r\n<p>Job Search The SEO Way</p>\r\n\r\n<p>Write down a description of the company that you would like to work for. This is more of a mind exercise to understand better what exactly you are looking for. You should have a specific aim and not just &ldquo;I&rsquo;m looking for a job.&rdquo;</p>\r\n\r\n<p>Is it an agency, a product company, SaaS? Big, small, medium-sized? A startup or a mature business? What sort of culture you want to be a part of? You want to be a part of a big engineering team or a small one with 2&ndash;3 people?</p>\r\n\r\n<p>Then list the industries that you like and start searching for companies that match your criteria.</p>\r\n\r\n<p>Google is your friend and here are a few tips on how to make your search much more effective. First, I suggest reading Google search operator guides<a href="http://www.googleguide.com/advanced_operators_reference.html" target="_blank">here</a> and <a href="http://libguides.mit.edu/c.php?g=176061&amp;p=1159512" target="_blank">here</a>. <a href="https://supple.com.au/tools/google-advanced-search-operators/" target="_blank">Here is another place</a> to learn with more examples.</p>\r\n\r\n<p>To give you an idea here are some queries that I used to narrow down my search:</p>\r\n\r\n<p><code>inurl:co.uk/careers intext:junior+ruby+developer+london</code><code>inurl:co.uk/jobs intext:&quot;junior+ruby+developer&quot;+london</code><br />\r\n<code>inurl:co.uk/jobs intext:junior+software+engineer+london</code></p>\r\n\r\n<p>It should be self-explanatory how the queries above filter the search.</p>\r\n\r\n<p>Sometimes you might get a lot of results from a job board. Filter these out with <code>-site:jobboard.com</code>, so that any page from this domain is excluded from your search:</p>\r\n\r\n<p><code>inurl:co.uk/careers intext:&quot;junior+software+engineer&quot;+london -site:reed.co.uk -site:jobsite.co.uk</code></p>\r\n\r\n<p>Search queries with quotes are &lsquo;exact match&rsquo;, so if you search for<code>intext:&quot;junior+ruby+engineer&quot;</code>, you will get results that have all three keywords in the exact sequence as you wrote them.</p>\r\n\r\n<p>Experiment and play around with these depending on your location and the type of role you are looking for.</p>\r\n\r\n<p>Then create templates for cover letters and email responses for different occasions. I personally kept them all in Google Sheet with different versions depending on the industry. You can also use tools such as <a href="http://www.hubspot.com/products/sales" target="_blank">Hubspot Sales</a> for creating templates directly in Gmail. It also has free 200 notifications when someone opens your email, which is handy.</p>\r\n\r\n<p>For the cover letter &mdash; <strong>ALWAYS</strong> include at least one personalized paragraph at the top of your cover letter. Here is a sample:</p>\r\n\r\n<blockquote>&ldquo;Good Afternoon,</blockquote>\r\n\r\n<blockquote>My name is Jar Jar Binks and I would like to be considered as a candidate for the <strong>ROLE</strong> at <strong>COMPANY NAME</strong>. Having looked at your company&rsquo;s website I think it is a really amazing thing that you do &mdash; making <strong>SOME TASK</strong> easier and faster.</blockquote>\r\n\r\n<blockquote>My main aim for the role that I am looking for is to be part of a project that actually matters and makes certain part/task of human life better/easier. The way I see it, the bottom line is that when people <strong>SOMETHING</strong> they can meet this need via your platform much faster. On top of everything else, I have a keen interest in <strong>RELATED FIELD TO WHAT THE COMPANY DOES</strong>and I would like to be part of <strong>COMPANY NAME</strong> cause and your mission.&rdquo;</blockquote>\r\n\r\n<blockquote>&hellip;rest of the template.</blockquote>\r\n\r\n<p>Consider adding some more personalized text at the bottom of the letter, where relevant.</p>\r\n\r\n<p>Then structure your Job Search/Study day and treat it like a full-time job. For example:</p>\r\n\r\n<p><strong>Morning:</strong></p>\r\n\r\n<ul>\r\n\t<li>1 hour of algorithms on <a href="https://www.hackerrank.com/" target="_blank">HackerRank</a>, <a href="http://hackajob.co/" target="_blank">Hackajob</a>, and <a href="https://www.codewars.com/" target="_blank">CodeWars</a>. Check for more resources <a href="https://medium.freecodecamp.com/5-key-learnings-from-the-post-bootcamp-job-search-9a07468d2331#.yhzjwerg2" target="_blank">here</a> in Insight #3 section of the post.</li>\r\n\t<li>Send 10 job applications.</li>\r\n</ul>\r\n\r\n<p><strong>Afternoon:</strong></p>\r\n\r\n<ul>\r\n\t<li>Study 3 hours the programming topic that will help you make more employable.</li>\r\n\t<li>Watch a keynote presentation/ interview with an engineer/listen to the podcast. I find <a href="https://softwareengineeringdaily.com/category/podcast/" target="_blank">Software Engineering Daily</a> to be amazing.</li>\r\n\t<li>Make a break/read a book (fiction, not non-fiction, let your brain rest)</li>\r\n\t<li>Read 3 useful blog posts. Make sure you are subscribed to the <a href="https://www.loggly.com/blog/newsletters-for-developers-and-programmers/" target="_blank">Weekly Newsletters</a>.</li>\r\n</ul>\r\n\r\n<p><strong>Evening:</strong></p>\r\n\r\n<ul>\r\n\t<li>Read a book on programming. Here is <a href="https://simpleprogrammer.com/2015/03/23/the-ultimate-list-of-programming-books/" target="_blank">a great list</a>.</li>\r\n\t<li>Take a walk and breathe fresh air.</li>\r\n</ul>\r\n\r\n<p><strong><em>Don&rsquo;t forget:</em></strong></p>\r\n\r\n<ul>\r\n\t<li>to eat.</li>\r\n\t<li>to take breaks.</li>\r\n\t<li>to drink lots of water. Aim for 2.5&ndash;3 liters per day.</li>\r\n\t<li>to exercise. Even 20&ndash;30 min per day in your living room would be just fine.</li>\r\n</ul>\r\n\r\n<p><em>Full Disclosure: over the course of the bootcamp and after (7 months total) I have lost 8 kg of muscle that I have worked hard to gain a year before. I forgot to do pretty much all 4 things listed above because I was too much immersed in the programming. Don&rsquo;t make the same mistake. Keep the balance.</em></p>\r\n\r\n<p>Finally, attack! Send several applications per day. Set yourself a benchmark of how many you want to send daily and stick to that.</p>\r\n\r\n<h3>Lesson #6: Don&rsquo;t Give Up. Find What Motivates You from Within</h3>\r\n\r\n<p>It&rsquo;s easy to give up. Everyone can do that. Only a few can grind forth. Most of us need something external to motivate us. But to get through, you&rsquo;ll need to find something to motivate you from within.</p>\r\n\r\n<p>Find the mechanism that helps you keep going, then channel it every time you feel discouragement or despair closing in on you. It could be literally anything, so it is hard to recommend anything in particular.</p>\r\n\r\n<p>Instead, I will share where I channel my inner power. It is Stoicism &mdash; probably the most practical philosophy to date.</p>\r\n\r\n<p>There is one particular quote from the monumental book <a href="https://www.amazon.com/Meditations-Classics-Aurelius-14-Aug-2003-Paperback/dp/B011T79C4C/ref=sr_1_4?ie=UTF8&amp;qid=1480172915&amp;sr=8-4&amp;keywords=meditations+modern+library" target="_blank">Meditations by Marcus Aurelius</a>, that I remind myself every single day:</p>\r\n\r\n<blockquote><em>&ldquo;Impediment to action advances action, what stands in the way becomes the way.&rdquo; &mdash; Marcus Aurelius</em></blockquote>\r\n\r\n<p>It helps me treat every obstacle as an opportunity:</p>\r\n\r\n<ul>\r\n\t<li>Didn&rsquo;t progress to the next stage after spending spent 2 days writing the coding test for the company, and didn&rsquo;t get a single piece of feedback? That&rsquo;s not bad, that&rsquo;s good. I&rsquo;ve learned how to build a new tool and picked up few new tricks. I&rsquo;ve also learned that such treatment of candidates discourages them, and I will never do that to others in my future career.</li>\r\n\t<li>Didn&rsquo;t get the offer after the final stage? That&rsquo;s not bad, that&rsquo;s good. It&rsquo;s time to reflect on the interview process and see what I could have done better. It&rsquo;s also a good time to kindly ask for some feedback from the interviewers.</li>\r\n\t<li>Didn&rsquo;t pass that test on an interview and felt bad not knowing the answer? That&rsquo;s not bad, that&rsquo;s good. I just found a crack in my knowledge that I didn&rsquo;t know existed. So I can go back home and study the subject of that test. I can also make sure that next time I nail this interview question.</li>\r\n\t<li>The interviewer was a jerk? That&rsquo;s not bad, that&rsquo;s good. That&rsquo;s valuable intel, which shows that such behavior is accepted in the company&rsquo;s culture. I&rsquo;ll think twice before moving forward with such a company.</li>\r\n</ul>\r\n\r\n<p>Make no mistake &mdash; this is not a <em>&ldquo;look at the bright side of things&rdquo;</em> philosophy, this is <strong>&ldquo;<em>I turn crap into gold with my sheer power of perception and move on&rdquo;</em> </strong>philosophy.</p>\r\n\r\n<p>This is a simple yet very powerful perspective &mdash; <em>whatever is in my way IS my way</em>.</p>\r\n\r\n<p>If you want to learn more about Stoicism &mdash; check the <a href="http://dailystoic.com/" target="_blank">Daily Stoic</a> site.</p>\r\n\r\n<p>Admittedly, I&rsquo;ve had lots of non-stoic days while looking for a job. Thankfully, I had the support of my family, friends and close people who never stopped believing in me for what I am incredibly grateful.</p>\r\n\r\n<h3>Bonus Lesson: Salaries</h3>\r\n\r\n<p>If you&rsquo;re in London and reading this, you might still have a question of how much you should ask for and could get in your new role. There is no straight answer to that. But most of the recruiters will tell you can get &pound;20 &mdash; &pound;25k, and that &pound;30k is out of reach for a junior developer. Please know that this is nonsense.</p>\r\n\r\n<p>Firstly, I&rsquo;ve received an offer of &pound;30k+, to work with the technology that I had zero prior experience with.</p>\r\n\r\n<p>Secondly, once at a Free Code Camp event, I asked the salary question to a recruiter who was giving us some tips on job hunting. Jump to 1 hour and 10 minutes into <a href="https://skillsmatter.com/skillscasts/8913-free-code-camp-meetup" target="_blank">this video</a> to hear his advice.</p>\r\n\r\n<p>Overall, &pound;25k should be the very minimum that you should ask for in my opinion. And I think it is totally possible to get to the mark of &pound;35k after a bootcamp (not necessarily straight away, but with additional study and practice while during your job search).</p>\r\n\r\n<p>At the end of the day, the final amount depends largely on the type of the company you&rsquo;re getting the offer from.</p>\r\n\r\n<p>Finally, the number in your contract should not be the reason for the choice of your job. <em>Opportunity should be</em>. That is why I turned down offers of 30k+ and accepted a short internship with the potential of becoming a full-time member of the team. I will work with Java (which I have never worked before), lots of AWS, cloud tech, Real-Time Transfer Protocols, and many other tasty technologies that make me absolutely excited.</p>\r\n\r\n<p>It will be hard of course, and that&rsquo;s good. <strong>Because I will turn this obstacle into a great opportunity.</strong></p>\r\n\r\n<h3>Summary</h3>\r\n\r\n<ol>\r\n\t<li>Don&rsquo;t bother too much with the Job Boards, it is the least effective channel of getting a job.</li>\r\n\t<li>Recruiters can help you in the search, but working with them is not the most reliable option when looking for a junior developer position.</li>\r\n\t<li>Go to all possible tech job-related events. Expand your network. You might find the right job opportunity from someone you meet there.</li>\r\n\t<li>Diversify your skill set and learn new technologies that are in demand every day to make you more employable.</li>\r\n\t<li>Strategize your job search. Just like learning to code, your job search demands a lot of hard work and structure.</li>\r\n\t<li>Don&rsquo;t give up. Do whatever it takes to keep your mind focused on the aim. Tell yourself: &ldquo;No matter how bad it is or how bad it gets, I&rsquo;m going to make it!&rdquo;</li>\r\n\t<li>Don&rsquo;t base your choice on salary alone. Look for opportunities and amazing technologies to work with.</li>\r\n</ol>\r\n\r\n<p>Finally, I hope you&rsquo;ll find the advice in this post useful, and that you&rsquo;ll learn from the various mistakes I made.</p>\r\n\r\n<p>If you&rsquo;re at the start of a bootcamp journey, or considering attending one, feel free to check my 13-week journey at The Firehose Project, <a href="https://aleksgorbenko.com/firehose-project-week-1/" target="_blank">starting at week 1</a>.</p>\r\n\r\n<p>If you have anything to add &mdash; I am happy to hear! Leave the comments below!</p>\r\n',
"image":"https://cdn-images-1.medium.com/max/800/1*V22_JkVqTxPMGEWp1CB68A.jpeg","author":"Aleks Gorbenko","posted_on":"1480789806189","slug":"lessons-from-my-post-bootcamp-job-search-in-london"},{"title":"Random Art and The Cryptographic Christmas Tree","summary":"When I first learned how to code, one of my first tasks was setting up an SSH key so...","textbody":'<p>When I first learned how to code, one of my first tasks was setting up an SSH key so I could use encryption to securely connect to my friend’s Linux server.</p><p>I ran the command:</p><code>ssh-keygen -t rsa</code><p>Then my computer created my SSH keys and spat out this “randomart”:<img src="https://cdn-images-1.medium.com/max/800/1*3sByvYpTpQKYf7cNki1iSg.png" alt=""></p><p>“What is this?” I asked, squinting at the randomart and trying to bring order out of the chaos.</p><p>My friend leaned over my shoulder and said, “Oh, that’s a randomart. It looks like you got a cute little cryptographic Christmas tree.”</p><p>I kind of squinted and turned my head. Sure enough, it did look like kind of like a Christmas tree!</p><p>It turns out these randomart are quite useful. As jumbled as they may appear, they’re a lot easier for humans to differentiate between than long strings of hex code.</p><p>Compare these two randomart:</p><pre>+--[ RSA 2048]----+<br>|        .        |<br>|       + .       |<br>|      . B .      |<br>|     o * +       |<br>|    X * S        |<br>|   + O o . .     |<br>|    .   E . o    |<br>|       . . o     |<br>|        . .      |<br>+-----------------+</pre><pre>Versus:</pre><pre><code class="markup--code markup--pre-code">+--[ RSA 2048]----+<br>|       .o o..    |<br>|       o +Eo     |<br>|        + .      |<br>|         . + o   |<br>|        S o = * o|<br>|           . o @.|<br>|            . = o|<br>|           . o   |<br>|            o.   |<br>+-----------------+</code></pre><p>Now try comparing these two strings of hex code:</p><pre>2048 1b:b8:c2:f4:7b:b5:44:be:fa:64:d6:eb:e6:2f:b8:fa 192.168.1.84 (RSA)</pre><pre>Versus:</pre><pre>2048 1b:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 192.168.1.84 (RSA)</pre><p>See what I mean? Therefore randomart. QED.</p><h2>A strange holiday tradition</h2><p>Fast forward to last week. Michael D. Johnson was trying to convince me that our open source community should design an ugly sweater for the holidays.</p><p>I’d never owned an ugly sweater except for one my aunt had knitted for me. And I didn’t even realize that it was an ugly sweater until years later, when I was flipping through my grandma’s scrapbook and encountered horrifying picture of myself wearing it.</p><p>Still, Michael convinced me that ugly sweaters were indeed a thing.</p><p>“People throw ugly sweater parties!” he told me. “You put on the ugliest Christmas sweater you can find, then go drink eggnog together!”</p><p>A quick Google search confirmed he was right. I had been living in a bubble all these years, and had missed out on the splendor of ugly sweater parties.</p><h2>Designing the ugly sweater</h2><p>So I brainstormed for a while. What was the ugliest thing I could imagine related to programming? Minified CSS? A C++ stack trace?</p><p>That’s when I remembered my first SSH key randomart, and my friend’s comment about how it looked like a Christmas tree.</p><p>I hopped on the phone with Wesley Searan, a graphic designer in Austin, Texas. Wesley and I threw design ideas back and forth for a few days.</p><p>I did the agile thing and tweeted out a rough draft of our design to get feedback from our community.</p><p>People wanted us to remove the XMAS 2016 (which I’d used in place of the RSA 2048) so they could wear the sweater subsequent holidays. And they wanted T-shirts and hoodies as well. So we made those available.</p><p>As always, we made these assets creative-commons licensed, and put them up on Free Code Camp’s assets repo for everyone to play with.</p><p>Here’s what the finished sweater looks like, complete with cheesy background:</p><img src="https://cdn-images-1.medium.com/max/1000/1*QbOpMGvRwxmzwMF5MBM9zg.jpeg" alt="description" title="tool tip"><p>So now you can throw your ugly Christmas sweater party, or just wear one to family gatherings. You’ll be the geekiest-looking person there (which is a good thing!) in your awesome SSH key randomart ugly sweater.</p><p>These will be available in our community’s shop for the next few days, so pick one up.</p><p>Happy encrypting!</p><p>Thanks for taking time out of your busy day to read my article. If you liked it, click the <i class="fa fa-heart"></i> below so other people will see this here on Medium.</p>',"image":"https://cdn-images-1.medium.com/max/2000/1*3J45l0AZ0VANlUsoXzZKYg.jpeg","author":"Quincy Larson","posted_on":"1480444203239","slug":"random-art-and-the-cryptographic-christmas-tree"},{"title":"How to attract new contributors to your open source project","summary":"It’s hard to attract contributors to your FOSS project — especially contributors who are new to open source.","textbody":'<p>It&rsquo;s hard to attract contributors to your FOSS project &mdash; especially contributors who are new to open source.</p>\r\n\r\n<p>Project maintainers often discuss making their open source projects more beginner-friendly, so they they can attract new contributors and make them feel welcome. But this dialogue often gets trapped in the echo chamber of maintainers themselves. Instead, it needs to involve the other party: the new contributors themselves.</p>\r\n\r\n<p>During my short time as an open source contributor, I&rsquo;ve browsed through tons of projects, and contributed to a few of them as well. In this post, I&rsquo;ll try to list what appealed to me as a new contributor, and what didn&rsquo;t. And I&rsquo;ll use a few projects as case studies.</p>\r\n\r\n<h3>Tip #1: Label beginner issues appropriately</h3>\r\n\r\n<p>This is definitely the most important consideration to me as a potential contributor.</p>\r\n\r\n<p>Labels make it easier to find issues that can serve as a beach head for a first contribution. If your project doesn&rsquo;t have these, it significantly raises the bar for contributing to it.</p>\r\n\r\n<p>It is very difficult for someone unfamiliar with your codebase to gauge the difficulty of an issue. So a generic label like&nbsp;help wanted&nbsp;isn&rsquo;t useful enough on its own. Try using more specific labels, such as&nbsp;good first bug, easy, low hanging fruit,&nbsp;etc. to communicate that an issue is easy enough for an initial contribution.</p>\r\n\r\n<h3>Tip #2: Establish proper contributing guidelines</h3>\r\n\r\n<p>A well-written&nbsp;<code>Contributing.md</code>&nbsp;can describe the workflow your project&rsquo;s maintainers expected contributors to follow. This is easy to document, and will save both sides a significant amount of time.</p>\r\n\r\n<p>Specify whether the contributor is required to work on a separate branch for each issue, or to squash their commits and rebase their changes before submitting a PR. Try to link to an appropriate tutorials for each of these processes in case the contributor isn&rsquo;t yet familiar with them.</p>\r\n\r\n<h3>Tip #3: Document your project&rsquo;s design, architecture, and directory structure</h3>\r\n\r\n<p>Having a document that gives a high-level overview of the design and architecture of your project can save both parties a lot of time.</p>\r\n\r\n<p>Instead of explaining the same thing over and over again to every new contributor, take note of questions that are frequently and create an FAQ right there on your README.md.</p>\r\n\r\n<p>The steepest barrier for most new contributors is navigating dense codebases. Help newcomers find their way by offering a description of your folder structure.</p>\r\n\r\n<p>A lot new contributors are junior developers who may not yet know a lot of common architecture and design patters. Create documents that highlight these decisions and the reasoning behind them.</p>\r\n\r\n<h3>Tip #4: Put in place a clear Code of&nbsp;Conduct</h3>\r\n\r\n<p>Create a proper Code of Conduct that explicitly states rules within your FOSS community. A lot of new contributors, including me, are scared of being treated badly, or looked down upon while trying to contribute.</p>\r\n\r\n<p>Your Code of Conduct that clarifies how to report violations can help folks feel safe. This also entails calling out bad behavior at every step, irrespective of the stature of the person involved, and taking appropriate action.</p>\r\n\r\n<h3>Tip #5: Create templates for pull requests and&nbsp;issues</h3>\r\n\r\n<p>A proper issue template can help people better describe the environment required to reproduce a bug. Contributors can then start working on the issue immediately, without needing to gather information from disparate places. This saves time for both parties.</p>\r\n\r\n<p>A similar argument can be made for pull request templates. Clearly lay out what&rsquo;s expected when a contributor submits a PR, including the format of their commit message, test plan, the changes made. This will help with code review as well, saving everyone even more time.</p>\r\n\r\n<h3>Tip #6: Prioritize responding to pull&nbsp;requests</h3>\r\n\r\n<p>Being the maintainer of a popular FOSS project is an incredible amount of work. Most people don&rsquo;t get paid to contribute to FOSS &mdash; maintainers and contributors alike. Most maintainers don&rsquo;t have enough time to review all PRs with the same amount of scrutiny.</p>\r\n\r\n<p>Prioritize PRs so contributors can understand beforehand whether or not they can expect to receive feedback for a low priority/easy bug fix.</p>\r\n\r\n<h3>Tip #7: Welcome all kinds of contributions</h3>\r\n\r\n<p>Our field has a nasty tendency to look down on non-code translations. Please don&rsquo;t let your project fall prey to this mentality.</p>\r\n\r\n<p>Encourage all kinds of contributions, be they documentation, code, fixing typos, tests &mdash; anything at all.</p>\r\n\r\n<h3>Tip #8: Reward new contributors</h3>\r\n\r\n<p>If you have the budget, reward new contributors by sending them swag such as stickers or shirts.</p>\r\n\r\n<p>If your budget doesn&rsquo;t permit that, then a simple shoutout or mention in a blogpost or on social media can also go a long way. It&rsquo;ll make them realize that their contributions &mdash; no matter big or small &mdash; aren&rsquo;t overlooked, and that they are valued.</p>\r\n\r\n<p>This establishes a feeling of belonging that may inspire them to contribute more.</p>\r\n\r\n<p><a href="https://medium.com/u/db72389e89d8" target="_blank">Kent C. Dodds</a>&nbsp;made a nifty open source specification for this:&nbsp;<a href="https://github.com/kentcdodds/all-contributors" target="_blank">All Contributors</a>.</p>\r\n\r\n<p>A good start can be maintaining a list of contributors on your project website and/or repository.</p>\r\n\r\n<p>Lastly, it never hurts to remember that everyone was once a junior developer. At some point, they needed help to get to the level they&rsquo;re at today.</p>\r\n\r\n<p>This simple fact can go a long way in establishing a healthy culture of mentorship within your open source organization. Treating everyone with respect &mdash; irrespective of their background &mdash; is critical to running a successful open source project.</p>\r\n\r\n<p>I tweeted the above a while back, when I was just getting started with contributing to FOSS. But since then, a lot has changed. I&rsquo;ve finally concluded:</p>\r\n\r\n<p><strong>Open source is way more about people than it&rsquo;ll ever be about code.</strong></p>\r\n\r\n<hr />\r\n<p>P.S. I am trying to create a list of beginner-friendly FOSS projects. If your open source project has any material relevant to new contributors, please consider opening an issue on this&nbsp;<a href="https://github.com/FreeCodeCamp/how-to-contribute-to-open-source/issues" target="_blank">repository</a>.</p>\r\n\r\n<p>A shout out to&nbsp;<a href="https://medium.com/u/a3a8af6addc1" target="_blank">Dan Abramov</a>,&nbsp;<a href="https://medium.com/u/db72389e89d8" target="_blank">Kent C. Dodds</a>&nbsp;and&nbsp;<a href="https://medium.com/u/17756313f41a" target="_blank">Quincy Larson</a>&nbsp;for helping me with this piece by providing their perspectives as maintainers. 😄</p>\r\n\r\n<p>If you have any further tips to add to this post, feel free to reach out to me or reply below.</p>\r\n\r\n<p>And if you found it useful,&nbsp;<strong>please tap or click &ldquo;︎</strong>❤&rdquo; to help to promote this piece to others.</p>\r\n',"image":"https://cdn-images-1.medium.com/max/800/1*D9NprGQc58UYEZxqc2Tt_A.jpeg","author":"Shubheksha","posted_on":"1480789805897","slug":"how-to-attract-new-contributors-to-your-open-source-project"},{"title":"Craigslist, Wikipedia, and the Abundance Economy","summary":"You’ve heard it before. Maybe you’ve even said it.","textbody":'<p>You&rsquo;ve heard it before. Maybe you&rsquo;ve even said it. &ldquo;There&rsquo;s no such thing as a free lunch.&rdquo;</p>\r\n\r\n<p>&ldquo;You can&rsquo;t get something for nothing.&rdquo;</p>\r\n\r\n<p>&ldquo;Somebody has to pay.&rdquo;</p>\r\n\r\n<p>People recite these sayings with confidence, as though they were quoting Newton&rsquo;s Laws of Motion.</p>\r\n\r\n<p>But history has shown: you often&nbsp;<em>can</em>&nbsp;get something for basically nothing.</p>\r\n\r\n<p>And even when somebody has to pay, that somebody doesn&rsquo;t have to be you, and the amount doesn&rsquo;t have to be very much at all.</p>\r\n\r\n<p>In some cases, the benefits so vastly outweigh the costs that it is &mdash; for all practical intents and purposes &mdash; a free lunch.</p>\r\n\r\n<h3>How we eradicated Polio from the face of the&nbsp;Earth</h3>\r\n\r\n<p>In the early 1950s, the US was recovering from its worst Polio epidemic ever. Thousands of children died from this virus, and many more suffered life-long paralysis.</p>\r\n\r\n<p>No one was safe from this horrible disease. Even US president Franklin D. Roosevelt contracted it at age 39. He spent the rest of his life in a wheelchair.</p>\r\n\r\n<p>Enter Jonas Salk, a medical researcher who had mainly studied flu viruses before turning his efforts toward Polio.</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/1*kMJd6ibAkYC27DuDQDDicQ.jpeg" /></p>\r\n\r\n<p>Jonas Salk in&nbsp;1959</p>\r\n\r\n<p>Dr. Salk spent 7 years assembling a team of researchers and working to develop a Polio vaccine.</p>\r\n\r\n<p>He conducted the most extensive field test ever, involving what historian Bill O&rsquo;Neal says were &ldquo;20,000 physicians and public health officers, 64,000 school personnel, and 220,000 volunteers.&rdquo;</p>\r\n\r\n<p>The vaccine was a success. So Dr. Salk set to work immunizing everyone on Earth. He pushed the marginal costs of the Polio vaccine as low as possible &mdash; to just the raw materials necessary &mdash; by forgoing any financial benefits his intellectual property would have brought him.</p>\r\n\r\n<p>When asked about his patent, he said, &ldquo;There is no patent. Could you patent the sun?&rdquo;</p>\r\n\r\n<p>Dr. Salk stared down a massive problem and threw himself into it with everything he could, without any aspiration for personal gain. And in the process, he and his colleagues basically wiped out one of the worst diseases ever.</p>\r\n\r\n<p>Today, everyone&rsquo;s life is better off as a direct result of this one massive free lunch.</p>\r\n\r\n<blockquote>&ldquo;The reward for work well done is the opportunity to do more.&rdquo; &mdash;Dr. Jonas&nbsp;Salk</blockquote>\r\n\r\n<h3>Free lunches are important</h3>\r\n\r\n<p>Before I run through some modern-day examples of free lunches, let me give you some background on myself, and why the notion of a free lunch is so important to me.</p>\r\n\r\n<p>I run an open source community where you can learn to code, practice by building software for nonprofits, then get a job as a developer. Thousands of people have gotten developer jobs so far. And it&rsquo;s free.</p>\r\n\r\n<p>I was so committed to the idea of it being free that I put the word &ldquo;free&rdquo; in the name.</p>\r\n\r\n<p>Free can mean both&nbsp;<strong>libre</strong> &mdash; free as in free speech, and&nbsp;<strong>gratis</strong> &mdash; free as in free beer. Just like the &ldquo;free&rdquo; in &ldquo;Free Open Source Software&rdquo; (FOSS), the &ldquo;free&rdquo; in &ldquo;Free Code Camp&rdquo; means both of these.</p>\r\n\r\n<p>But still, every day I encounter people who are skeptical. They tell me they don&rsquo;t use Free Code Camp because &ldquo;it sounds too good to be true.&rdquo;</p>\r\n\r\n<p>&ldquo;There&rsquo;s no way all this can be free,&rdquo; they say. &ldquo;I&rsquo;ll sign up and give you my email address, and only then will I find out that I need to pay $20 a month, right?&rdquo; Or: &ldquo;You&rsquo;re free for now, but soon you&rsquo;ll throw up ads and paywalls, like everybody else does.&rdquo;</p>\r\n\r\n<p>Well, I&rsquo;ve said this publicly a hundred times, and I&rsquo;ll say it publicly again:<strong>Free Code Camp will always be free.</strong></p>\r\n\r\n<p>We don&rsquo;t have any investors to boss us around. We don&rsquo;t have any debt that&rsquo;s pulling us under. And most importantly, we&rsquo;re not doing this for the money.</p>\r\n\r\n<p>You don&rsquo;t start a free open source community that helps nonprofits because you want to make money. There are tons of better ways to strike it rich in software.</p>\r\n\r\n<p>Instead, we operate on the fringe of capitalism. The frontier where marginal costs asymptotically approach zero, and the very laws of classical economics begin to unravel. A place called the&nbsp;<strong>abundance economy</strong>.</p>\r\n\r\n<p>And we&rsquo;re not alone.</p>\r\n\r\n<h3>Low overhead engineering with lichess.org</h3>\r\n\r\n<p>Meet Thibault Duplessis, the founder of&nbsp;<a href="http://lichess.org/" target="_blank">lichess.org</a> &mdash; the second most popular chess website on the planet.</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/0*Mf6j9-uvZ6pj0gLi." /></p>\r\n\r\n<p>Thibault Duplessis</p>\r\n\r\n<p>As of&nbsp;<a href="https://en.lichess.org/blog/VgwCfhwAAB8AbzkK/100000000-games-played" target="_blank">a year ago</a>, lichess had 78,000 unique daily visitors, who play a total of 260,000 games of chess each day.</p>\r\n\r\n<p>Thibault has no employees. He doesn&rsquo;t even work on lichess full-time. He still has a job at a development consultancy.</p>\r\n\r\n<p>Lichess&rsquo;s main competitor,&nbsp;<a href="http://chess.com/" target="_blank">Chess.com</a>, is a privately-held behemoth that makes millions of dollars each year off of banner ads and premium membership up-sells, then spends that money&nbsp;<a href="https://gigaom.com/2009/12/22/419-chess-com-buys-rival-site-chesspark/" target="_blank">acquiring their competition</a>.</p>\r\n\r\n<p>Contrast this with Thibault, who has&nbsp;<a href="https://github.com/ornicar/lila" target="_blank">open-sourced lichess&rsquo;s server code</a>. He has promised that lichess will be free forever, and that it will never show ads.</p>\r\n\r\n<p>But wait &mdash; how can he do this?</p>\r\n\r\n<p>Because of the nature of modern web applications, and the economics of their near-zero marginal costs.</p>\r\n\r\n<p>Despite lichess&rsquo;s complexity &mdash; and the scale at which it operates &mdash; Thibault&rsquo;s server costs are a mere $416 a month.</p>\r\n\r\n<p>This cost is covered by merchandise and donations from his grateful users, who increasingly include some of the best chess players in the world.</p>\r\n\r\n<h3>How Craigslist covers costs by charging only 0.1% of its&nbsp;users</h3>\r\n\r\n<p>Remember classifieds?</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/1*OF95xt7pTgHE0D-ZgTIZNQ.jpeg" /></p>\r\n\r\n<p>People used to pay a dollar per word for tiny ads that appeared in the backs of newspapers, sandwiched between other ads.</p>\r\n\r\n<p>Then, 20 years ago, Craigslist utterly disrupted classifieds. They provided a directory of ads online, for free.</p>\r\n\r\n<p>It was searchable. You could use as many words as you wanted, and include pictures. You could repost your ads as many times as you wanted, in as many nearby cities as you wanted.</p>\r\n\r\n<p>But if placing ads on Craigslist was free, how did Craigslist make money?</p>\r\n\r\n<p>Well, if you asked a random Craigslist user, they probably wouldn&rsquo;t be able to tell you. Most people just assume that Craigslist is a nonprofit, supported by donations or something.</p>\r\n\r\n<p>But Craigslist made $400 million last year.</p>\r\n\r\n<p>They did it by charging to post in a few key categories within a few key cities. If you want to list an apartment in New York City, or a job in San Francisco, you have to pay Craigslist a small fee.</p>\r\n\r\n<p>This means that less than one in a thousand people who use Craigslist actually pay any money to do so. Those real estate agents in New York City and those recruiters in San Francisco are paying for everyone else&rsquo;s free lunch.</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/1*RS8QWwRKrRx4LgOlXgTmvA.jpeg" /></p>\r\n\r\n<p><a href="https://medium.com/u/bd66d1db3e64" target="_blank">craignewmark</a>, who founded Craigslist, in front of its old headquarters.</p>\r\n\r\n<p>Craigslist doesn&rsquo;t have investors. It keeps things simple. It has a small team of about 40 people.</p>\r\n\r\n<p>Craig still works at Craigslist. He handed over the role of CEO to his long-time friend so he could focus on doing what he loves: providing support for Craigslist users around the world.</p>\r\n\r\n<p>Like the other people mentioned in this article, he doesn&rsquo;t seem to care about money. From what I can tell, he donates most of his money through his charity&nbsp;<a href="https://craigconnects.org/" target="_blank">CraigConnects</a>. And he spends his downtime advocating for causes he cares about, like supporting veterans and helping more women start their careers in tech.</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/0*Fe32DDN_RKxrgqQI." /></p>\r\n\r\n<p>Craigslist&rsquo;s office up until a few years ago: Craig&rsquo;s&nbsp;house.</p>\r\n\r\n<h3>Crowd-sourcing contributions with Wikipedia</h3>\r\n\r\n<p>Before Wikipedia, the most popular encyclopedia was written by paid experts, and printed in massive books. The Encyclopaedia Britannica was so expensive that they wouldn&rsquo;t even tell you its price in their TV spots. (It cost $1,400.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Jimmy Wales &mdash; Wikipedia&rsquo;s visionary leader &mdash; had a better idea. He leveraged the power of the internet and the wisdom of volunteer contributors. And he made it free.</p>\r\n\r\n<p>The number of volunteer-contributed articles on Wikipedia exploded. It quickly surpassed traditional encyclopedias in the scope of its content.</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/800/1*RVkGuvNMhmo2nAZlbrie8Q.png" /></p>\r\n\r\n<p>Instead of waiting for a new physical edition to hit the press, Wikipedia editors could instantly publish updates to articles. Wikipedia was so up-to-date that many people started using it for news on current events.</p>\r\n\r\n<p>Traditional encyclopedias were quickly backed into a corner. They were paying expert writers and editors to create their content. Surely this resulted in more accurate information than Wikipedia&rsquo;s volunteer-driven free-for-all.</p>\r\n\r\n<p>But in 2005, a major academic journal published an analysis comparing the factual accuracy of Wikipedia versus the Encyclopaedia Britannica. It found:</p>\r\n\r\n<blockquote>&ldquo;Jimmy Wales&rsquo; Wikipedia comes close to Britannica in terms of the accuracy of its science entries, a&nbsp;<em>Nature</em>&nbsp;investigation finds.&rdquo; &mdash; The&nbsp;<a href="http://www.nature.com/nature/journal/v438/n7070/full/438900a.html" target="_blank">abstract</a>&nbsp;from Nature&rsquo;s&nbsp;analysis</blockquote>\r\n\r\n<p>In a last-ditch effort, The Encyclopaedia Britannica pushed back, but Nature upheld its finding.</p>\r\n\r\n<p>This was the final blow to the encyclopedia industry, which had flourished for decades by selling stacks of books&nbsp;<a href="http://www.slate.com/articles/technology/technology/2012/03/the_encyclopedia_britannica_was_expensive_useless_and_exploitative_i_m_glad_it_s_gone_.html" target="_blank">door-to-door to guilty parents</a>.</p>\r\n\r\n<p>A decade later, Wikipedia is now the 6th most visited website on the planet. And covers its operating costs through more than $70 million in donations each year from grateful patrons.</p>\r\n\r\n<p>But despite all of Jimmy&rsquo;s accomplishments, people seem to be much more preoccupied with his money. Or rather, his lack-there-of.</p>\r\n\r\n<p>Here&rsquo;s what you get when you type &ldquo;Jimmy Wales net worth&rdquo; into Google:</p>\r\n\r\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*IRJYSRrgGj_QkTHz4TAJjA.png" /></p>\r\n\r\n<p>Below this result, Google shows you pictures of people who started other large websites. Each of them has a net worth that&rsquo;s&nbsp;<strong>five orders of magnitude larger</strong>&nbsp;than Jimmy&rsquo;s paltry $1 million.</p>\r\n\r\n<p>People have a hard time accepting that someone would set out to build something as important as Wikipedia without bothering to make money out of it.</p>\r\n\r\n<p>One person went so far as to ask straight up on&nbsp;<a href="https://www.quora.com/Is-Jimmy-Wales-rich/answer/Jimmy-Wales" target="_blank">Quora</a>: &ldquo;Is Jimmy Wales rich?&rdquo;</p>\r\n\r\n<p>Jimmy responded:</p>\r\n\r\n<blockquote>&ldquo;By any sane standard of measurement, yes, of course I&rsquo;m rich. Nearly half of the people on earth live on less than $2 a day. I spend more than that on my cellphone bill.&rdquo;</blockquote>\r\n\r\n<h3>There&rsquo;s so much more to life than&nbsp;money.</h3>\r\n\r\n<p>Why are people so preoccupied by money, and the net worth of famous people? Because they&rsquo;re operating in a&nbsp;<strong>scarcity mindset</strong>.</p>\r\n\r\n<p>They are so preoccupied by the risk of not having enough that they can&rsquo;t see the real risk: missing out on the potential for so much more.</p>\r\n\r\n<p>The traditional scarcity mindset approach to creating value at scale goes something like this:</p>\r\n\r\n<ol>\r\n\t<li>Figure out a problem you can solve for a large number of people</li>\r\n</ol>\r\n\r\n<p>2a. If people will pay for your product, sell it to them, then re-invest the profits into growing your business (bootstrapping)</p>\r\n\r\n<p>2b. If your solution isn&rsquo;t something people will pay for, raise a bunch of venture capital to fund development. Once it&rsquo;s big enough, make money some other way &mdash; usually by selling ads.</p>\r\n\r\n<p>But there&rsquo;s an alternative. An&nbsp;<strong>abundance mindset</strong>.</p>\r\n\r\n<p>This approach shrugs off concerns for basic needs (worst case scenario, I have to get a job in fast food) and instead focuses on upside potential.</p>\r\n\r\n<p>When you apply an abundance mindset, you approach problems from a different perspective. You try to identify opportunities for free lunches.</p>\r\n\r\n<p>Your approach to creating value at scale will look something more like this:</p>\r\n\r\n<ol>\r\n\t<li>Figure out a problem you can solve for a large number of people</li>\r\n\t<li>Keep costs low, fund development yourself, and ask for donations, sell merchandise, or find a few users with deep pockets who can subsidize everyone else.</li>\r\n</ol>\r\n\r\n<p>This is how all of these organizations I&rsquo;ve discussed here operate. And this is how they can always be free.</p>\r\n\r\n<p>If you want to learn more about the abundance economy, read&nbsp;<a href="http://amzn.to/2fxCSYN" target="_blank">this excellent book</a>&nbsp;by the creator of the X-Prize and Singularity University:</p>\r\n',"image":"https://cdn-images-1.medium.com/max/1000/1*gpi7xZnNhVKsvNKKK7aR2Q.jpeg","author":"Quincy Larson","posted_on":"1479321003240","slug":"craigslist-wikipedia-and-the-abundance-economy"}]